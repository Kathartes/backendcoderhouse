
<header>
    <div>
        <a class="logo" href="/products"><h1 >Ecommerce</h1></a>
        </div>
    <div>
        <nav>
            <a class = "box" id="chat-btn">Chat</a>
            <a class = "box"id="role-btn">Rol</a>
            <a href = "/manager" class = "box" id="manager-btn">Manager</a>
            <a href ="/login"class = "box" id="logout-btn">Salir</a>
        </nav>
    </div>
    
        <div class="user">

            <p class="user-email" id="user-email" >{{user.email}}</p>
            <p>Rol:{{user.role}}</p>
            <p>ID Carrito: {{user.cart._id}}</p>
            
        </div>
</header>
<section>
    <div class="container">
        <input type="checkbox" id="check">
        <div class="login form" id="login">
            <details>
                <summary>Agregar producto</summary>
                <form id="addForm">
                    <input type="text" id="title" name="title" placeholder="Nombre de producto" required>
                    <input type="text" id="description" name="description" placeholder="Descripcion" required>
                    <input type="text" id="code" name="code" placeholder="Codigo" required>
                    <input type="number" id="price" name="price" placeholder="Precio" required>
                    <input type="number" id="stock" name="stock" placeholder="Stock" required>
                    <input type="text" id="category" name="category" placeholder="Categoria" required>
                    <label for="thumbnails">Imagen:</label>
                    <input type="file" id="thumbnails" name="thumbnails" >
                    <button type="submit" class="button" id="createProductBtn" >Agregar producto</button>
                </form>
            </details>
            <details>
                    <summary>Modificar producto</summary>
                    <form id="updateForm">
                    <input type="text" id="updateProductId" name="updateProductId" placeholder="ID del producto (requerido)" required>
                    <button type="button" class="button" id="searchProductBtn" >Buscar producto</button>
                    <input type="text" id="updateTitle" name="title" placeholder="Nombre de producto" >
                    <input type="text" id="updateDescription" name="description" placeholder="Descripcion" >
                    <input type="text" id="updateCode" name="code" placeholder="Codigo" >
                    <input type="number" id="updatePrice" name="price" placeholder="Precio">
                    <input type="number" id="updateStock" name="stock" placeholder="Stock">
                    <input type="text" id="updateCategory" name="category" placeholder="Categoria">
                    <label for="thumbnails">Imagen:</label>
                    <input type="file" id="updateThumbnails" name="thumbnails">
                    <button type="button" class="button" id="updateProductBtn" >Modificar producto</button>
                    </form>
            </details>
        
            <details>
                <summary>Eliminar producto</summary>
                    <form id="deleteProductForm">
                    <input type="text" id="productId" name="productId" placeholder="ID del producto" required>
                    <button type="button" class="button" id="deleteProductBtn">Eliminar Producto</button>
                    </form>
            </details>
        </div>
    </div>

    <div >
                    <div class="gallery">
                    <ul class="products">
                        {{#each products}}
                        <li class="product">

                            <ul class="thumbnails">
                                {{#each thumbnails}}
                                <li><img class="image" src="{{this}}" alt="Thumbnail"></li>
                                {{/each}}
                            </ul>
                            <p>ID: {{_id}}</p> 
                            <p>Title: {{title}}</p> 
                            <p>Description: {{description}}</p> 
                            <p>Code: {{code}}</p> 
                            <p>Price: ${{price}}</p> 
                            <p>Status: {{status}}</p> 
                            <p>Stock: {{stock}}</p> 
                            <p>Category: {{category}}</p> 
                            <p>Owner: {{owner}}</p> 
                        </li>
                        {{/each}}
                    </ul>
                </div>
            </div>
    </div>
</section>

<script>
   document.getElementById('addForm').addEventListener('submit', function (event) {
            event.preventDefault();

          
            const title = document.getElementById('title').value;
            const description = document.getElementById('description').value;
            const code = document.getElementById('code').value;
            const price = parseFloat(document.getElementById('price').value);
            const stock = parseInt(document.getElementById('stock').value);
            const category = document.getElementById('category').value;
            const owner = document.getElementById('user-email').textContent;

            console.log(title, description, code, price, stock, category, owner);


   
    fetch('/api/products', {
        method: 'POST',
        headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({ title, description, code, price, stock, category, owner }),
            })

    .then(response => {
        if (response.ok) {
            document.getElementById('title').value = '';
            document.getElementById('description').value = '';
            document.getElementById('code').value = '';
            document.getElementById('price').value = '';
            document.getElementById('stock').value = '';
            document.getElementById('category').value = '';
            document.getElementById('thumbnails').value = '';

            setTimeout(() => {
                location.reload();
            }, 500);
        } else {
            console.error('Error al crear el producto:', response.statusText);
        }
    })
    .catch(error => console.error('Error al crear el producto:', error));


   });

    document.getElementById('updateForm').addEventListener('submit', function (event) {
            event.preventDefault();

            const productId = document.getElementById('updateProductId').value;
            const title = document.getElementById('updateTitle').value;
            const description = document.getElementById('updateDescription').value;
            const code = document.getElementById('updateCode').value;
            const price = document.getElementById('updatePrice').value;
            const stock = parseInt(document.getElementById('updateStock').value);
            const category = document.getElementById('updateCategory').value;
            const owner = document.getElementById('user-email').textContent;
             const updatedProduct = {};

                
            console.log(productId, title, description, code, price, stock, category, owner);


   
    fetch(`/api/products/${productId}`, {
                    method: 'PUT',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({productId, title, description, code, price, stock, category, owner}),
                })

    .then(response => {
        if (response.ok) {
            document.getElementById('updateProductId').value = '';
            document.getElementById('updateTitle').value = '';
            document.getElementById('updateDescription').value = '';
            document.getElementById('updateCode').value = '';
            document.getElementById('updatePrice').value = '';
            document.getElementById('stock').value = '';
            document.getElementById('updateStock').value = '';
            document.getElementById('updateThumbnails').value = '';

            setTimeout(() => {
                location.reload();
            }, 500);
        } else {
            console.error('Error al crear el producto:', response.statusText);
        }
    })
    .catch(error => console.error('Error al crear el producto:', error));


   });        

   // Función para buscar producto por ID
function searchProductById() {
    const productId = document.getElementById('updateProductId').value;

    fetch(`/api/products/search?id=${productId}`,{
            method: 'GET',
                    headers: {
                                'Content-Type': 'application/json',
                            },
                            body: JSON.stringify({ title, description, code, price, stock, category, owner }),               
    })
        .then(response => {
            if (!response.ok) {
                throw new Error('Error al buscar el producto');
            }
            return response.json();
        })
        .then(product => {
            // Rellenar los campos del formulario con los detalles del producto encontrado
            document.getElementById('updateTitle').value = product.title || '';
            document.getElementById('updateDescription').value = product.description || '';
            document.getElementById('updateCode').value = product.code || '';
            document.getElementById('updatePrice').value = product.price || '';
            document.getElementById('updateStock').value = product.stock || '';
            document.getElementById('updateCategory').value = product.category || '';

           
        })
        .catch(error => {
            console.error('Error:', error);
        });
}

// Event listener para el botón de búsqueda de producto por ID
document.getElementById('searchProductBtn').addEventListener('click', searchProductById);

document.getElementById('deleteProductBtn').addEventListener('click', deleteProduct);

            document.getElementById('createProductBtn').addEventListener('click', createProduct);

            document.getElementById('updateProductBtn').addEventListener('click', updateProduct);


            function deleteProduct() {
                const productId = document.getElementById('productId').value;

                fetch(`/api/products/${productId}`, {
                    method: 'DELETE',
                })
                    .then(response => {
                        if (response.ok) {

                            const productElement = document.getElementById(`product_${productId}`);
                            if (productElement) {
                                productElement.remove();
                            }
                        } else {
                            console.error('Error al eliminar el producto:', response.statusText);
                        }
                    })
                    .catch(error => console.error('Error al eliminar el producto:', error));


                document.getElementById('productId').value = '';
            }

   
</script>