<header>
    <div>
        <a class="logo" href="/products"><h1 >Ecommerce</h1></a>
        </div>
    <div>
        <nav>
            <a class = "box" id="chat-btn">Chat</a>
            <a class = "box"id="role-btn">Rol</a>
            <a href = "/manager" class = "box" id="manager-btn">Manager</a>
            <a href ="/login"class = "box" id="logout-btn">Salir</a>
        </nav>
    </div>
    <div class="user">
        <p>Email:<span class="user-email">{{user.email}}</span></p>
        <p>Rol:{{user.role}}</p>
        <p>ID Carrito: <span id="cartId">{{user.cart}}</span></p>
        
    </div>
</header>
<section>
    <div class="container">
        <input type="checkbox" id="check">
        <div class="login form" id="login">
            <details>
                <summary>Carrito</summary>
                    <ul class="carts" id="cart">
                    {{#each user.cart.products}}
                 
                    {{/each}}
                    </ul>
                    <p id="total"><strong>Total a Pagar: </strong></p>
                    <button type="submit" id="checkoutbtn">Realizar Pedido</button>
            </details>
        </div>
    </div>
<div>
    <div class="gallery">
    <ul class="products">
    {{#each products}}
    <li class="product">

    <ul class="thumbnails">
    {{#each thumbnails}}
    <li><img class="image" src="{{this}}" alt="Thumbnail"></li>
    {{/each}}
    </ul>
     <p id="{{_id}}">{{_id}}</p> 
     <p>Title: {{title}}</p> 
    <p>Description: {{description}}</p> 
    <p>Code: {{code}}</p> 
    <p>Price: ${{price}}</p> 
    <p>Status: {{status}}</p> 
    <p>Stock: {{stock}}</p> 
    <p>Category: {{category}}</p> 
    <p>Owner: {{owner}}</p> 
    <p>Quantity: </p><input id="quantity{{_id}}" type="number" value="1" min="1" >
    <button type="button" id="addToCart">Agregar al carrito</button>
    </li>
    {{/each}}
    </ul>
    </div>
</div>


<script>
    
    document.addEventListener('DOMContentLoaded', function() {
       const addToCartButtons = document.querySelectorAll('#addToCart');
       
       const cartId = document.getElementById(`cartId`).innerText
       const totalAmountDisplay = document.getElementById('total');
       const removeFromCartButtons = document.querySelectorAll('.removeFromCart');
       
    
    addToCartButtons.forEach(function(button) {
        button.addEventListener('click', function(event) {
            
            const productId = button.parentElement.querySelector('p').getAttribute('id');
            const quantity = document.getElementById(`quantity${productId}`).value
            
            fetch(`/api/carts/${cartId}/product/${productId}`, {
                    method: 'POST',
                    credentials: 'include',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({ quantity }),
                    });

                });
                
    });

    function renderCart(cart) {
      let totalPrice = 0;
      const cartList = document.getElementById('cart');
      cartList.innerHTML = '';

      if (cart && cart.products) {
        cart.products.forEach(product => {
          const listItem = document.createElement('li');
          listItem.innerHTML = `
          <p><strong>ID: </strong><span id="productId">${product.productId._id}</span></p>
          <p><strong>Producto: </strong>${product.productId.title}</p>
          <p><strong>Descripción: </strong>${product.productId.description}</p>
          <p><strong>Código: </strong>${product.productId.code}</p>
          <p><strong>Categoría: </strong>${product.productId.category}</p>
          <p><strong>Precio unitario: </strong>$
          <strong>${product.productId.price}</strong>
        </p>
        <p><strong>Cantidad: </strong>${product.quantity}</p>
        <button class="remove-from-cart-btn" id="${product.productId._id}">Eliminar del carrito</button>
      `;
          const removeButton = listItem.querySelector('.remove-from-cart-btn');
          removeButton.addEventListener('click', () => removeFromCart(product.productId._id));

          const productPrice = parseFloat(product.productId.price);
          const productTotalPrice = productPrice * product.quantity;
          totalPrice += productTotalPrice;

          cartList.appendChild(listItem);
        });
      }

      totalAmountDisplay.textContent = `Total a Pagar: $${totalPrice.toFixed(2)}`;
    }
     fetch(`/api/carts/${cartId}`)
      .then(response => {
        if (!response.ok) {
          throw new Error(`Error en la solicitud: ${response.statusText}`);
        }
        return response.json();
      })
      .then(data => {
        renderCart(data.cart);
      })
      .catch(error => {
        console.error('Error en la solicitud de obtener el carrito:', error);
      });

      function clearCart() {
      fetch(`/api/carts/${cartId}`, {
        method: 'DELETE',
        credentials: 'include',
      })
        .then(response => response.json())
        .then(data => {
          renderCart(data.cart);
        })
        .catch(error => console.error('Error al vaciar el carrito:', error));
    }

    function removeFromCart(productId) {

    //const productId = document.getElementById('productId').innerText

      fetch(`/api/carts/${cartId}/products/${productId}`, {
        method: 'DELETE',
        credentials: 'include',
      })
        .then(response => response.json())
        .then(data => {
          fetch(`/api/carts/${cartId}`)
            .then(response => response.json())
            .then(data => {
              renderCart(data.cart);
            })
            .catch(error => console.error('Error al obtener el carrito actualizado:', error));
        })
        .catch(error => console.error('Error al eliminar del carrito:', error));
    }

    document.getElementById('checkoutbtn').addEventListener('click',  function() {

        console.log(cartId)

         fetch(`/api/carts/${cartId}/purchase`, {
          method: 'POST',
          credentials: 'include',

        });
    
    });

});
</script>